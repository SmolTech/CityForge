---
# Example Kubernetes Init Container configuration for CityForge database initialization
#
# This shows how to run init_db.py as an init container to ensure the database
# is set up before the main backend container starts.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: cityforge-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cityforge-backend
  template:
    metadata:
      labels:
        app: cityforge-backend
    # nosemgrep: yaml.kubernetes.security.run-as-non-root.run-as-non-root
    spec:
      # Init container runs before the main container
      initContainers:
        - name: db-init
          image: ghcr.io/smoltech/cityforge/cityforge-backend:latest
          command:
            - python
            - init_db.py
            - --non-interactive
          env:
            # Database connection (same as main container)
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: POSTGRES_HOST
              value: postgres-service
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: community_db

            # Admin user credentials (optional - only needed on first run)
            # If not provided, admin user creation will be skipped
            - name: ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: admin-credentials
                  key: email
                  optional: true
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: admin-credentials
                  key: password
                  optional: true

      # Main backend container
      containers:
        # nosemgrep: yaml.kubernetes.security.allow-privilege-escalation-no-securitycontext.allow-privilege-escalation-no-securitycontext
        - name: backend
          image: ghcr.io/smoltech/cityforge/cityforge-backend:latest
          ports:
            - containerPort: 5000
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: POSTGRES_HOST
              value: postgres-service
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: community_db
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: secret-key

---
# Example Secret for admin credentials (create this manually or via sealed-secrets)
apiVersion: v1
kind: Secret
metadata:
  name: admin-credentials
type: Opaque
stringData:
  email: admin@example.com
  # Password must meet requirements:
  # - At least 8 characters
  # - At least one uppercase letter
  # - At least one lowercase letter
  # - At least one number
  password: YourSecurePassword123
