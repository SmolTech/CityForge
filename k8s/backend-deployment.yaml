apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: cityforge
  name: cityforge-backend
  labels:
    app: cityforge-backend
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: cityforge-backend
  template:
    metadata:
      labels:
        app: cityforge-backend
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      initContainers:
        - name: db-migration
          image: ghcr.io/smoltech/cityforge-backend
          imagePullPolicy: Always
          # Use initialize_db.py which handles both fresh and existing databases
          command: ["python", "initialize_db.py", "--non-interactive"]
          env:
            - name: POSTGRES_HOST
              value: "cityforge-db"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "cityforge"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: cityforge.cityforge-db.credentials.postgresql.acid.zalan.do
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cityforge.cityforge-db.credentials.postgresql.acid.zalan.do
            - name: FLASK_APP
              value: "app:create_app"
            - name: LOG_LEVEL
              value: "DEBUG" # Debug logging for database initialization
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop:
                - ALL
      containers:
        - name: backend
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop:
                - ALL
          image: ghcr.io/smoltech/cityforge-backend
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
          env:
            - name: POSTGRES_HOST
              value: "cityforge-db"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "cityforge"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: cityforge.cityforge-db.credentials.postgresql.acid.zalan.do
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: cityforge.cityforge-db.credentials.postgresql.acid.zalan.do
            - name: FLASK_DEBUG
              value: "false"
            - name: OPENSEARCH_HOST
              value: "opensearch-service"
            - name: OPENSEARCH_PORT
              value: "9200"
            - name: NAMESPACE
              value: "cityforge"
            - name: LOG_LEVEL
              value: "DEBUG" # Set to DEBUG, INFO, WARNING, or ERROR
            - name: FLASK_ENV
              value: "production" # Keep production for security, but with debug logs
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: cityforge-backend-service
  namespace: cityforge
  labels:
    app: cityforge-backend
spec:
  selector:
    app: cityforge-backend
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
  type: ClusterIP
