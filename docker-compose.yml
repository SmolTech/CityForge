services:
  postgres:
    image: postgres:17-alpine
    container_name: cityforge-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: community_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: cityforge-opensearch
    environment:
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    ports:
      - "9200:9200"
      - "9600:9600"
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cityforge-backend
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: community_db
      OPENSEARCH_HOST: opensearch
      OPENSEARCH_PORT: 9200
      JWT_SECRET_KEY: change-this-in-production
      UPLOAD_FOLDER: /app/uploads
      FLASK_ENV: production
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cityforge-frontend
    environment:
      NEXT_PUBLIC_API_URL: ""
      BACKEND_API_URL: http://backend:5000
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy

  indexer:
    build:
      context: ./indexer
      dockerfile: Dockerfile
    container_name: cityforge-indexer
    environment:
      OPENSEARCH_HOST: opensearch
      OPENSEARCH_PORT: 9200
      BACKEND_URL: http://backend:5000
      NAMESPACE: default
    depends_on:
      backend:
        condition: service_healthy
      opensearch:
        condition: service_healthy
    restart: on-failure

volumes:
  postgres_data:
  opensearch_data:
  backend_uploads:
